module butterflyunit(
    input [47:0] A_t,    // Входной сигнал A (47:24 - действительная часть, 23:0 - мнимая часть)
    input [47:0] B_t,    // Входной сигнал B (47:24 - действительная часть, 23:0 - мнимая часть)
    input [47:0] W,      // Twiddle factor (47:24 - действительная часть, 23:0 - мнимая часть)
    output [47:0] A_f,   // Выходной сигнал A (47:24 - действительная часть, 23:0 - мнимая часть)
    output [47:0] B_f    // Выходной сигнал B (47:24 - действительная часть, 23:0 - мнимая часть)
);

    // Провода для соединения мультипликаторов
    wire [47:0] A_real_B_real, A_imag_B_imag, A_imag_B_real, A_real_B_imag;
    wire [95:0] multout; // 95:48 - действительная часть, 47:0 - мнимая часть
    wire [47:0] truncated_prod;

    // Усечение продукта для избежания лишних битов
    assign truncated_prod = {multout[94:71], multout[46:23]};
    // 23 бита усечены, поэтому W должен быть умножен на 2^23 для компенсации

    /////////// Комплексный сумматор ///////////
    assign A_f[47:24] = A_t[47:24] + truncated_prod[47:24]; // Действительная часть
    assign A_f[23:0] = A_t[23:0] + truncated_prod[23:0];   // Мнимая часть

    /////////// Комплексный вычитатель ///////////
    assign B_f[47:24] = A_t[47:24] + (~truncated_prod[47:24] + 24'b1); // Действительная часть
    assign B_f[23:0] = A_t[23:0] + (~truncated_prod[23:0] + 24'b1);   // Мнимая часть

    /////////// Комплексный мультипликатор ///////////
    assign A_real_B_real = {{24{B_t[47]}}, B_t[47:24]} * {{24{W[47]}}, W[47:24]}; // real * real
    assign A_imag_B_imag = {{24{B_t[23]}}, B_t[23:0]} * {{24{W[23]}}, W[23:0]};   // imag * imag
    assign A_imag_B_real = {{24{B_t[23]}}, B_t[23:0]} * {{24{W[47]}}, W[47:24]}; // imag * real
    assign A_real_B_imag = {{24{B_t[47]}}, B_t[47:24]} * {{24{W[23]}}, W[23:0]}; // real * imag

    // Комбинирование результатов мультипликации
    assign multout[95:48] = A_real_B_real + (~A_imag_B_imag + 1); // Действительная часть
    assign multout[47:0]  = A_imag_B_real + A_real_B_imag;        // Мнимая часть

endmodule
